#!/bin/bash

#Obtain current directory
export SITC_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $SITC_ROOT/install.conf

printHelp()
{
echo "Usage: install [OPTIONS...]
Installs WebMO and (a) computational chemistry engine(s).

WebMO options:
  --WEBMO_USER=<name>  unix user WebMO software will be installed under`printDefaultMaybe $WEBMO_USER`
  --WEBMO_LICENSE=<license>
                       license used to download and install WebMO`printDefaultMaybe $WEBMO_LICENSE`
  --WEBMO_PASSWORD=<password>
                       password that corresponds to WEBMO_LICENSE`printDefaultMaybe $WEBMO_PASSWORD`
  --WEBMO_INITIAL_USERS=<users>
                       comma separated username:password`printDefaultMaybe $WEBMO_INITIAL_USERS`
  --SKIP_WEBMO=<true/false>
                       optionally omit webmo (install engines only)`printDefaultMaybe $SKIP_WEBMO`

Engine options:
  --ENGINE_DIR=<path>  path to directory that engines are to be installed in`printDefaultMaybe $ENGINE_DIR`
  --ENGINES=<engines>  comma separated engines to be installed on this computer`printDefaultMaybe $ENGINES`

Available engines:"
for file in `ls $SITC_ROOT/scripts/common`; do
	if [ "`echo $file | cut -c1-7`" == "install" ]; then
		engine="`echo $file | cut -c9-`"
		if [ "$engine" != "webmo" ]; then
			echo "  $engine"
		fi
	fi
done

for file in `ls $SITC_ROOT/scripts/common`; do
        if [ "`echo $file | cut -c1-7`" == "install" ]; then
                engine="`echo $file | cut -c9-`"
                if [ "$engine" != "webmo" ]; then
                        $SITC_ROOT/scripts/common/install_$engine "true"
                fi
        fi
done

echo
echo "Remote server options:
  --REMOTE_SERVER=<true/false>
                       create a remote server`printDefaultMaybe $REMOTE_SERVER`
  --REMOTE_SERVER_ENGINES=<engines>
                       comma separated engines to be installed to a remote server
                       If blank, defaults to ENGINES`printDefaultMaybe $REMOTE_SERVER_ENGINES`

Miscellaneous:
  --YES_TO_ALL=<true/false>
                       accept licenses and don't prompt for continuing
  -y                   same as --YES_TO_ALL=true
  -v                   display version information and exit
  -h                   display this help text and exit"
exit
}

printDefaultMaybe() {
var=$1
if [ ! -z "$var" ]; then
	echo "
                       default: $var"
fi
}

for param in $@; do
	# Potentially override defaults in install.conf
	if [ "`echo $param | cut -c1-2`" == "--" ]; then
		export "`echo $param | cut -c3-`"
		paramname=`echo $param | cut -c3- | cut -d "=" -f1`
		sed -i "s&export $paramname=.*&export $paramname=\"${!paramname}\"&" $SITC_ROOT/install.conf
	elif [ "`echo $param | cut -c1-1`" == "-" ]; then
		param="`echo $param | cut -c2-`" # remove the '-'
		for var in `echo "$param" | sed -e 's/\(.\)/\1\n/g'`; do
			case $var in
				"y") YES_TO_ALL=true ;;
				"v") cat $SITC_ROOT/version && exit ;;
				"h") printHelp ;;
			esac
		done
	fi
done

#if [ "$YES_TO_ALL" == "true" ] && [ -z "$WEBMO_LICENSE" -o -z "$WEBMO_PASSWORD" ]; then
#	echo "ERROR: Cannot be accept_all without specifying both WEBMO_LICENSE and WEBMO_PASSWORD"
#	exit
#fi

#if [ -n "`echo $ENGINES | grep "mopac7"`" ] && [ -n "`echo $ENGINES | grep "openmopac"`" ]; then
#	echo "ERROR: Cannot install both mopac7 and openmopac"
#	exit
#fi

echo "Server In The Cloud version `cat $SITC_ROOT/version`"
echo "Copyright (c) 2016, WebMO, LLC, all rights reserved."

if [ ! -e $SITC_ROOT/license_agreed ] && [ "$accept_all" == "false" ]; then
	echo
	echo "This script automates the installation of software from several"
	echo "third parties. Many of these have licenses that are agreed to"
	echo "automatically by this script. Indicate your consent by pressing"
	echo "ENTER, or press CTRL-c to exit."
	echo
	read ans
	touch $SITC_ROOT/license_agreed
fi

if [ -n "`uname -a | grep -i Debian`" ]; then
   OS="debian"
elif [ -n "`uname -a | grep -i ubuntu`" ]; then
   OS="ubuntu"
elif [ -e "/etc/redhat-release" ]; then
   OS="centos"
else
   echo "Unidentified OS! Exiting."
   exit
fi

echo
echo "Installing for $OS"

if [ ! -e $SITC_ROOT/ran_os_additions ]; then
	echo
	echo "*** RUNNING OS_ADDITIONS ***"
	$SITC_ROOT/scripts/$OS/os_additions
	if [ "$YES_TO_ALL" == "false" ]; then
		read -s -n 1 -p "Press any key to continue"
	fi
	touch $SITC_ROOT/ran_os_additions
fi

if [ "$SKIP_WEBMO" != "true" ]; then
	echo
	echo "*** RUNNING INSTALL_WEBMO ***"
	$SITC_ROOT/scripts/$OS/install_webmo $SITC_ROOT
	if [ "$YES_TO_ALL" == "false" ]; then
		read -s -n 1 -p "Press any key to continue"
	fi
fi

echo
echo "*** INSTALLING ENGINES ***"
for engine in `sed 's/,/ /g' <<< $ENGINES`; do
        echo "Installing $engine"
        $SITC_ROOT/scripts/$OS/install_$engine
done
if [ "$YES_TO_ALL" == "false" ]; then
        read -s -n 1 -p "Press any key to continue"
fi

if [ "$REMOTE_SERVER" == "true" ]; then
	echo
	echo "*** TARING SCRIPTS TO /home/$WEBMO_USER ***"
	tar czf /home/$WEBMO_USER/sitc.tar.gz $SITC_ROOT
	if [ "$YES_TO_ALL" == "false" ]; then
	        read -s -n 1 -p "Press any key to continue"
	fi

	echo
	echo "*** CREATING A REMOTE SERVER ***"
	sudo su $WEBMO_USER -c "$SITC_ROOT/scripts/api/api spawn"
	
fi

if [ "$SKIP_WEBMO" != "true" ]; then

	IP=`curl -s "http://metadata/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip" -H "X-Google-Metadata-Request: True"`
	echo "

*** CONFIGURE INSTALLATION ***

In your web browser, login to $IP/$WEBMO_USER with the
username \"admin\" and a blank password. Set the admin password.

Run a test job."
fi
echo
